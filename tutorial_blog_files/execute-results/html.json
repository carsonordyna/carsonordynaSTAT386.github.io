{
  "hash": "ab6d05e26d175507e7ee42550c328972",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Tutorial Blog\"\nformat: html\n---\n\n# The Cox Proportional Hazards Model: A Brief Introduction and Demo\n\n### Introduction\n\nIn clinical research, it is valuabel to be able to model and predict whether a patient will experience a specified event (e.g. death, the return of a disease like cancer, etc,). Just as important is being able to model and predict ***when*** such an event occurs (e.g. 3 years after the diagnosis of a cancer at particular stage). This is the essence of survival analysis: the use of statistical models focused on time-to-event data. One of the most common and powerful tools in survival analysis is the Cox Proportional Hazards Model (Cox model for short), which helps us understand how different factors (age, treatment, comorbidities, etc.) influence a given individual's changing  moment-to-moment risk of a given event over time.\n\nFor the last several months, I have had the privilege of working on a clinical research team at Massachusetts General Hospital. As I have reviewed scientific literature regarding lung cancer and surgical pproaches to treating it, I have seen firsthand how often prevelent this model is in medical/clinical research. This post offers a brief introduction to the Cox model and a simple, hands-on demo using Python.\n\n\n### The Model\n\nAt the core of the Cox model is the hazard function. A hazard function, $\\lambda (t)$, is one that indicates the instantaneous rate of an event occurring (e.g. death) at a specific time, $t$. The baseline hazard function $\\lambda_0 (t)$ refers to the hazard function when explanatory variables (i.e. covariates), $X$, are at their baseline levels (e.g. when no treatment/medication is given, when a particular comorbidity is not present, etc.). That is, $X_i = 0$ for all $i \\in \\{1, 2, ..., n \\}$ for $n$ covariates. The effect of each covariate is denoted as $\\beta$ with $\\beta_i$ denoting the effect of the $i$-th covariate. The overall hazard function, $\\lambda(t \\mid X)$, is as follows:\n\n$$\n\\lambda(t \\mid X) = \\lambda_0 (t) e^{\\displaystyle \\beta_1 X_1 + \\beta_2 X_2 + \\cdots + \\beta_n X_n}\n$$\n\nwhere $X =$ $(X_1, X_2, ..., X_n)$ is the covariate vector. Note that if $\\beta_i > 0$, then increasing $X_i$ (or $X_i = 1$ if binary) means an increased risk, and if $\\beta_i < 0$, then increasing $X_i$ (or $X_i = 1$ if binary) means a decreased risk. In the case of a single covariate, $\\beta_1$, it can be shown that\n\n$$\n\\frac{\\lambda(t \\mid x + 1)}{\\lambda(t \\mid x)} = e^{\\displaystyle \\beta_1}\n$$\n\nWhen comparing two patients, $a$ and $b$, in the single covariate case, it can also be shown that\n\n$$\n\\frac{\\lambda(t \\mid X_a)}{\\lambda(t \\mid X_b)} = e^{\\displaystyle \\beta_1(X_a - X_b)}\n$$\n\nThe right-handside of these equations are constants independent of time, $t$. These ***constant*** proportions are the reason why the model is called the Cox ***Proportional Hazards*** model. The derivation of these results and deeper mathematical theory and background behind the model is beyond the scope of this blog.\n\n![Hazard Function Graph](harzard_graph.png)\n\n\n### Demo\n\nNow, I'll present a simple example (using the `lifelines` Python library, [link to documentation]https://lifelines.readthedocs.io/en/latest/) of how to fit and interpret a Cox model on a small synthetic dataset.\n\n::: {#f184b2b8 .cell execution_count=1}\n``` {.python .cell-code}\n# Install lifelines if not already installed\n!pip install lifelines\n```\n:::\n\n\n\n\n::: {#4fc3fb14 .cell execution_count=3}\n``` {.python .cell-code}\nimport sys\nprint(sys.executable)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n/Users/cromacair/Desktop/STAT 386/Labs/Tutorial Blog/carsonordynaSTAT386.github.io/.venv/bin/python3\n```\n:::\n:::\n\n\n::: {#beafc24e .cell execution_count=4}\n``` {.python .cell-code}\n# Import librarys\nimport pandas as pd\nfrom lifelines import CoxPHFitter\n\n# Sample dataset\ndata = pd.DataFrame({\n    'age': [60, 50, 45, 70, 65],\n    'treatment': [1, 0, 1, 0, 1],\n    'duration': [5, 6, 6, 2, 4],\n    'event': [1, 0, 1, 1, 0]\n})\n\n# Fit the Cox model\ncph = CoxPHFitter()\ncph.fit(data, duration_col='duration', event_col='event')\n\n# Examine the results\ncph.print_summary()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/cromacair/Desktop/STAT 386/Labs/Tutorial Blog/carsonordynaSTAT386.github.io/.venv/lib/python3.11/site-packages/lifelines/utils/__init__.py:1163: ConvergenceWarning: Column age has high sample correlation with the duration column. This may harm convergence. This could be a form of 'complete separation'.     See https://stats.stackexchange.com/questions/11109/how-to-deal-with-perfect-separation-in-logistic-regression\n\n  warnings.warn(dedent(warning_text), ConvergenceWarning)\n/Users/cromacair/Desktop/STAT 386/Labs/Tutorial Blog/carsonordynaSTAT386.github.io/.venv/lib/python3.11/site-packages/lifelines/fitters/coxph_fitter.py:1607: ConvergenceWarning: Newton-Raphson convergence completed successfully but norm(delta) is still high, 2.145. This may imply non-unique solutions to the maximum likelihood. Perhaps there is collinearity or complete separation in the dataset?\n\n  warnings.warn(\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>model</th>\n      <td>lifelines.CoxPHFitter</td>\n    </tr>\n    <tr>\n      <th>duration col</th>\n      <td>'duration'</td>\n    </tr>\n    <tr>\n      <th>event col</th>\n      <td>'event'</td>\n    </tr>\n    <tr>\n      <th>baseline estimation</th>\n      <td>breslow</td>\n    </tr>\n    <tr>\n      <th>number of observations</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>number of events observed</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>partial log-likelihood</th>\n      <td>-1.39</td>\n    </tr>\n    <tr>\n      <th>time fit was run</th>\n      <td>2025-09-30 02:29:56 UTC</td>\n    </tr>\n  </tbody>\n</table>\n</div><table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th style=\"min-width: 12px;\"></th>\n      <th style=\"min-width: 12px;\">coef</th>\n      <th style=\"min-width: 12px;\">exp(coef)</th>\n      <th style=\"min-width: 12px;\">se(coef)</th>\n      <th style=\"min-width: 12px;\">coef lower 95%</th>\n      <th style=\"min-width: 12px;\">coef upper 95%</th>\n      <th style=\"min-width: 12px;\">exp(coef) lower 95%</th>\n      <th style=\"min-width: 12px;\">exp(coef) upper 95%</th>\n      <th style=\"min-width: 12px;\">cmp to</th>\n      <th style=\"min-width: 12px;\">z</th>\n      <th style=\"min-width: 12px;\">p</th>\n      <th style=\"min-width: 12px;\">-log2(p)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>age</th>\n      <td>3.00</td>\n      <td>20.10</td>\n      <td>512.01</td>\n      <td>-1000.53</td>\n      <td>1006.53</td>\n      <td>0.00</td>\n      <td>inf</td>\n      <td>0.00</td>\n      <td>0.01</td>\n      <td>1.00</td>\n      <td>0.01</td>\n    </tr>\n    <tr>\n      <th>treatment</th>\n      <td>15.00</td>\n      <td>3.28e+06</td>\n      <td>2560.07</td>\n      <td>-5002.65</td>\n      <td>5032.65</td>\n      <td>0.00</td>\n      <td>inf</td>\n      <td>0.00</td>\n      <td>0.01</td>\n      <td>1.00</td>\n      <td>0.01</td>\n    </tr>\n  </tbody>\n</table><br><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <tbody>\n    <tr>\n      <th>Concordance</th>\n      <td>0.93</td>\n    </tr>\n    <tr>\n      <th>Partial AIC</th>\n      <td>6.77</td>\n    </tr>\n    <tr>\n      <th>log-likelihood ratio test</th>\n      <td>4.03 on 2 df</td>\n    </tr>\n    <tr>\n      <th>-log2(p) of ll-ratio test</th>\n      <td>2.91</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nHooray!\n\n",
    "supporting": [
      "tutorial_blog_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdn.jsdelivr.net/npm/requirejs@2.3.6/require.min.js\" integrity=\"sha384-c9c+LnTbwQ3aujuU7ULEPVvgLs+Fn6fJUvIGTsuu1ZcCf11fiEubah0ttpca4ntM sha384-6V1/AdqZRWk1KAlWbKBlGhN7VG4iE/yAZcO6NZPMF8od0vukrvr0tg4qY6NSrItx\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js\" integrity=\"sha384-ZvpUoO/+PpLXR1lu4jmpXWu80pZlYUAfxl5NsBMWOEPSjUn/6Z/hRTt8+pR6L4N2\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}